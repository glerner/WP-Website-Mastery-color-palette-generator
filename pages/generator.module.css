/* Root page wrapper fills viewport and contains either desktop layout or mobile tabs */
.pageWrapper {
  display: flex;
  flex-direction: column;
  height: 100dvh;
  /* app-within-viewport */
  background-color: var(--background);
  overflow: hidden;
  /* inner regions handle their own scroll */
}

/* Small landscape (e.g., iPhone SE landscape: 667 x 375) */
@media (orientation: landscape) and (max-height: 420px) {
  .previewContent {
    padding: var(--spacing-1) var(--spacing-2);
  }

  .previewColumn {
    /* give more room to the right panel */
    flex: 0 1 clamp(180px, 32vw, 260px);
    min-width: 180px;
  }

  .tabsColumn {
    min-width: 220px;
    padding-left: var(--spacing-1);
    padding-right: var(--spacing-1);
  }
}

/* Desktop two-column layout container (hidden on mobile) */

.desktopLayout {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 100%;
}

@media (min-width: 1024px) {
  .desktopLayout {
    display: flex;
    flex-direction: row;
  }

  /* On wide screens, the left preview should never exceed 320px */
  .previewColumn {
    flex: 0 1 320px;
    max-width: 320px;
  }

  .tabsColumn {
    flex: 1 1 auto;
    /* right side takes the rest (wider than left) */
  }
}

/* Mobile layout removed: unified responsive desktop layout is used at all widths */

.controlsColumn {
  width: 100%;
  flex: 0 0 auto;
  max-height: 45vh;
  background-color: var(--sidebar);
  border-right: 1px solid var(--border);
  overflow-y: auto;
}

@media (min-width: 1024px) {
  .controlsColumn {
    /* ~40% width on desktop, allow shrink with guardrail */
    flex: 0 1 40%;
    width: auto;
    min-width: 320px;
    max-height: none;
  }

  /* Desktop-specific spacing tweaks */
  .previewContent {
    /* remove wide right margin that widened the center gutter */
    padding: var(--spacing-3) var(--spacing-4) var(--spacing-6) var(--spacing-3);
    margin: 0;
  }

  /* Preview column anchors around ~532px but adapts */
  .previewColumn {
    flex: 0 1 clamp(300px, 34vw, 520px);
    min-width: 300px;
    max-width: 520px;
  }

  .tabsColumn {
    /* fill remaining space next to adaptive preview column */
    flex: 1 1 auto;
    width: auto;
    max-width: none;
    min-width: 360px;
    /* reduce internal gap from the divider */
    padding-left: var(--spacing-2);
    padding-right: var(--spacing-2);
  }
}

.controlsContent {
  padding: var(--spacing-5);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-6);
}

.previewColumn {
  flex: 1 1 auto;
  min-height: 0;
  overflow-y: scroll;
  background-color: var(--background);
  /* Use full width; avoid extra chrome at edges */
  padding-left: 0;
  padding-right: 0;
}

.previewContent {
  /* full-width within the preview column; no auto-centering */
  padding: var(--spacing-2);
  margin: 0;
}

/* Mobile tabs removed */

/* Desktop tabs column styles */
.tabsColumn {
  width: auto;
  max-width: none;
  flex: 1 1 auto;
  min-height: 0;
  height: 100%;
  overflow-y: auto;
  scrollbar-gutter: stable;
  /* keep space for scrollbar so layout doesn't shift */
  border-left: 1px solid var(--border);
  background: var(--sidebar, var(--background));
}

@media (max-width: 1023px) {
  /* keep tabs column visible on all widths */
}

/* Do not hide desktop layout on mobile; we use one responsive layout across all widths */

.tabs {
  display: flex;
  flex-direction: column;
}

.tabContent {
  /* add horizontal padding so selected outlines are fully visible */
  padding: var(--spacing-2) var(--spacing-4) var(--spacing-4);
  overflow-x: visible;
  /* avoid horizontal scrollbar from wide inner rows */
  /* ensure bottom breathing room on AI/Demo and long forms */
  margin-bottom: 1rem;
}

/* Standard section heading for tab contents */
.sectionTitle {
  font-size: var(--cf-text-xl);
  color: var(--foreground);
  margin: 0 0 var(--spacing-4);
}

.submitButton {
  margin-top: var(--spacing-4);
  width: 100%;
}

.aiForm {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-4);
}

.manualForm {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-4);
}

/* Manual tab: responsive two-column wrapper */
.manualGrid {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-6);
  align-items: flex-start;
}

/* Manual tab: column that grows and wraps under */
.manualCol {
  flex: 1 1 340px;
  min-width: 300px;
}

/* Color wheel row: wheel + legend */
.wheelRow {
  display: flex;
  align-items: flex-start;
  gap: var(--cf-space-m);
  flex-wrap: wrap;
  /* Extra vertical/left space so outer labels don’t overlap neighbors or page edge */
  margin: var(--cf-space-xs);
  padding-top: var(--cf-space-xl);
  padding-bottom: var(--cf-space-2xl);
  padding-left: var(--cf-space-2xl);
  padding-right: var(--cf-space-2xl);
  position: relative;
  /* Reserve space for labels without changing the circle's aspect */
  min-height: calc(var(--wheel-size) + 72px);
}

.colorWheel {
  --wheel-size: 220px;
  /* Marker and band sizing */
  --marker-size: 18px;
  --ring-width: var(--marker-size);
  /* Place marker center so entire marker sits within the band */
  --wheel-radius: calc(var(--wheel-size) / 2 - var(--marker-size));
  /* Pointer label radius (outside the ring) */
  --marker-label-radius: calc(var(--wheel-size) / 2 + 0px);
  position: relative;
  flex: 0 0 auto; /* prevent shrinking/squishing */
  width: var(--wheel-size);
  height: var(--wheel-size);
  border-radius: 50%;
  /* Math convention: 0° at right, angles increase CCW so 90° is at top.
     conic-gradient increases clockwise, so we reverse color order to make hues increase CCW. */
  background: conic-gradient(from 90deg,
    red, magenta, blue, cyan, lime, yellow, red
  );
  box-shadow: inset 0 0 0 10px rgba(255,255,255,0.7), 0 0 0 1px var(--border);
  margin-right: var(--cf-space-l);
  /* Tick placement */
  --tick-radius: calc(var(--wheel-size) / 2 - 6px);
  /* Move labels slightly outside the wheel to fit 3-digit values */
  --tick-label-radius: calc(var(--wheel-size) / 2 + 16px);
  /* Extra margin for top/bottom labels (90/270) */
  --tick-label-radius-vertical: calc(var(--wheel-size) / 2 + 24px);
  overflow: visible;
}

.wheelMarker {
  position: absolute;
  top: 50%;
  left: 50%;
  width: var(--marker-size);
  height: var(--marker-size);
  border-radius: 50%;
  box-shadow: 0 0 0 2px var(--background), 0 0 0 3px var(--foreground);
  transform-origin: center center;
}

.wheelLegend {
  display: grid;
  grid-template-columns: repeat(2, minmax(140px, 1fr));
  gap: var(--spacing-2) var(--spacing-4);
  min-width: 280px;
}

/* Faint ticks at cardinal angles */
.wheelTick {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 2px;
  background: color-mix(in lab, var(--foreground) 40%, transparent);
  border-radius: 1px;
  pointer-events: none;
}

.wheelTickVertical {
  width: 2px;
  height: 10px;
}

.wheelTickLabel {
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: var(--cf-text-s);
  line-height: 1;
  /* Use foreground which is our text-on-light equivalent in this context */
  color: var(--foreground);
  transform-origin: center center;
  pointer-events: none;
  z-index: 2; /* sits above wheel; marker labels will sit above this */
}

/* Pointer-style labels for each semantic marker */
.wheelMarkerLabel {
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: var(--cf-text-s);
  line-height: 1;
  color: var(--foreground);
  transform-origin: left center; /* anchor left edge at the radial point so text grows outward */
  pointer-events: none;
  z-index: 3;
  white-space: nowrap;
  /* Ensure text remains readable atop degree labels and wheel in both schemes */
  background: light-dark(
    color-mix(in lab, var(--background) 92%, transparent),
    color-mix(in lab, var(--background) 85%, transparent)
  );
  padding: 2px 4px;
  border-radius: 4px;
  box-shadow: 0 0 0 1px var(--border);
}

.legendSwatch {
  display: inline-block;
  width: 18px;
  height: 18px;
  border-radius: 3px;
  border: 1px solid var(--border);
  margin-right: 8px;
  vertical-align: middle;
}

.legendHsl {
  margin-left: 8px;
  font-size: var(--cf-text-s);
  color: var(--muted-foreground, #666);
}

/* Inline manual fields at all sizes */
.manualForm .formItem {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--spacing-2);
  margin-bottom: var(--spacing-3);
  /* Allow items to wrap on narrow widths */
  flex-wrap: wrap;
}

.manualForm .formLabel {
  flex: 0 0 auto;
  width: fit-content;
  margin: 0;
}

.manualForm .formControl {
  /* don't grow to fill row; allow label+swatch+input to stay on one line */
  flex: 0 0 auto;
  width: fit-content;
}

/* Fixed width for Theme Name field */
.themeNameInput {
  width: 15em;
  max-width: 100%;
}

/* Optional tweaks for very small screens */
@media (max-width: 480px) {
  .manualForm .formLabel {
    width: fit-content;
  }
}

.exportSection {
  margin-top: var(--spacing-8);
  padding-top: var(--spacing-6);
  border-top: 1px solid var(--border);
}

.exportTitle {
  font-size: var(--cf-text-m);
  font-weight: 600;
  color: var(--foreground);
  margin: 0 0 var(--spacing-2);
}

.exportDescription {
  font-size: var(--cf-text-s);
  color: var(--muted-foreground);
  margin: 0 0 var(--spacing-4);
  line-height: 1.5;
}

.exportButton {
  width: 100%;
}

/* Reusable divider for section breaks; color is set inline from the palette */
.tertiaryDivider {
  border: 0;
  border-top-style: solid;
  border-top-width: 6px;
  width: 75%;
  margin: 0 auto;
}

/* Subtle notice banner used in AI tab */
.aiNotice {
  /* High-visibility, AAA-friendly banner */
  font-size: var(--cf-text-xl);
  font-weight: 700;
  color: var(--foreground);
  background: var(--background);
  border: 2px solid var(--foreground);
  border-radius: var(--radius-sm);
  padding: var(--spacing-3) var(--spacing-4);
  margin-bottom: var(--spacing-4);
}

.errorContainer {
  background-color: var(--surface);
  border: 1px solid var(--error);
  border-radius: var(--radius);
  padding: var(--spacing-4);
  margin-bottom: var(--spacing-4);
}

.errorHeader {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  color: var(--error);
  font-weight: 600;
  margin-bottom: var(--spacing-2);
}

.errorMessage {
  color: var(--foreground);
  font-size: var(--cf-text-s);
  margin: 0 0 var(--spacing-3);
  line-height: 1.4;
}

.errorSuggestion {
  background-color: var(--muted);
  border-radius: var(--radius-sm);
  padding: var(--spacing-3);
  font-size: var(--cf-text-s);
  color: var(--muted-foreground);
  margin-bottom: var(--spacing-3);
  line-height: 1.4;
}

.errorSuggestion strong {
  color: var(--foreground);
}

.retryButton {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  width: 100%;
}

/* Ultra-small devices (e.g., iPhone SE 375px): tighten paddings and allow narrower columns */
@media (max-width: 480px) {

  /* Reduce chrome around both columns */
  .previewContent {
    padding: var(--spacing-1) var(--spacing-1);
    margin: 0;
  }

  .tabContent {
    padding: var(--spacing-2) var(--spacing-1) var(--spacing-3);
  }

  /* Allow columns to shrink so two columns can fit */
  .previewColumn {
    /* At most half the screen on narrow phones */
    flex: 0 1 min(50vw, 240px);
    min-width: 170px;
  }

  .tabsColumn {
    min-width: 170px;
    padding-left: var(--spacing-1);
    padding-right: var(--spacing-1);
  }
}

/* Tablet/narrow-desktop widths: keep left column <= 50% viewport */
@media (min-width: 481px) and (max-width: 1023px) {
  .previewColumn {
    flex: 0 1 45vw;
    /* keep left <=45% so right stays wider */
    max-width: 45vw;
    min-width: 220px;
  }

  .tabsColumn {
    flex: 1 1 auto;
    /* ensure right panel remains wider when possible */
  }
}
